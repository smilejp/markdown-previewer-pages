{"version":3,"file":"index-BZH7sC8j.js","sources":["../../index.tsx","../../index.html?html-proxy&index=1.js"],"sourcesContent":["/**\n * @license\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Handle TypeScript declarations\ndeclare const marked: { parse: (markdown: string) => string };\ndeclare const DOMPurify: { sanitize: (html: string) => string };\ndeclare const mermaid: {\n  initialize: (config: { startOnLoad: boolean; theme: string; }) => void;\n  run: () => void;\n};\ndeclare const hljs: {\n  highlightElement: (element: Element) => void;\n};\n\n// --- Constants ---\nconst FILE_INDEX_KEY = 'markdown_files_index';\nconst FILE_CONTENT_PREFIX = 'markdown_file_';\nconst SIDEBAR_STATE_KEY = 'sidebar_collapsed_state';\nconst INITIAL_MARKDOWN = `# Markdown Previewer with Local Storage\n\nThis is a real-time markdown editor. Your files are saved directly in your browser.\n\n## Features\n\n- **Live Preview:** Your markdown is rendered as you type.\n- **Mermaid Support:** Create diagrams easily.\n- **PDF Export:** Save your work as a PDF.\n- **Themeable:** Switch between light and dark themes.\n- **Local Storage:** Your files are saved in your browser, no login required!\n\n### Example Diagram\nCorrect rendering of HTML tags like <br/> is now supported:\n\\`\\`\\`mermaid\ngraph TB\n    subgraph \"UI Layer\"\n        Pages[\"Pages/Components<br/>(React)\"]\n    end\n    \n    subgraph \"Presenter Layer\"\n        Controller[\"Controllers<br/>(UI Event Handling)\"]\n        Transfer[\"Transfer<br/>(Entity → ViewModel)\"]\n        ViewModel[\"ViewModels<br/>(UI State)\"]\n    end\n    \n    Pages --> Controller\n    Controller --> Transfer\n    Transfer --> ViewModel\n    Pages --> ViewModel\n\\`\\`\\`\n`;\n\n/**\n * Main application class to encapsulate all functionality.\n */\nclass MarkdownEditorApp {\n    private state: {\n        currentFile: { id: string, name: string } | null;\n    };\n\n    private dom: {\n        [key: string]: HTMLElement;\n    };\n\n    constructor() {\n        this.state = {\n            currentFile: null,\n        };\n        \n        // A central place for all DOM element references\n        this.dom = {\n            editor: document.getElementById('editor') as HTMLTextAreaElement,\n            preview: document.getElementById('preview') as HTMLDivElement,\n            styleSelector: document.getElementById('style-selector') as HTMLSelectElement,\n            savePdfButton: document.getElementById('save-pdf') as HTMLButtonElement,\n            saveButton: document.getElementById('save-button') as HTMLButtonElement,\n            newDocButton: document.getElementById('new-doc-button') as HTMLButtonElement,\n            fileList: document.getElementById('file-list') as HTMLUListElement,\n            helpButton: document.getElementById('help-button') as HTMLButtonElement,\n            helpModal: document.getElementById('help-modal') as HTMLDivElement,\n            closeModalButton: document.getElementById('close-modal-button') as HTMLButtonElement,\n            sidebar: document.getElementById('file-sidebar') as HTMLElement,\n            sidebarToggle: document.getElementById('sidebar-toggle') as HTMLButtonElement,\n            resizer: document.getElementById('resizer') as HTMLDivElement,\n            editorSection: document.getElementById('editor-section') as HTMLElement,\n            mainContent: document.getElementById('main-content') as HTMLElement,\n            fileInfo: document.getElementById('file-info')!,\n            currentFileName: document.getElementById('current-file-name')!,\n        };\n        \n        this.init();\n    }\n    \n    /**\n     * Initializes the application, binds events, and loads initial state.\n     */\n    async init() {\n        if (!this.checkLocalStorageSupport()) {\n            alert('경고: 이 브라우저는 로컬 저장소를 지원하지 않습니다. 파일 저장 기능이 제한될 수 있습니다.');\n        }\n\n        mermaid.initialize({ startOnLoad: false, theme: 'default' });\n        this.bindEvents();\n\n        const savedSidebarState = this.storageGet(SIDEBAR_STATE_KEY) === 'true';\n        this.setSidebarState(savedSidebarState);\n\n        // Check for URL parameter to load external markdown\n        const urlParams = new URLSearchParams(window.location.search);\n        const externalUrl = urlParams.get('url');\n\n        if (externalUrl) {\n            await this.loadExternalMarkdown(externalUrl);\n        } else {\n            (this.dom.editor as HTMLTextAreaElement).value = INITIAL_MARKDOWN;\n        }\n\n        this.updatePreview();\n        this.renderFileList();\n    }\n    \n    private checkLocalStorageSupport(): boolean {\n        try {\n            const testKey = 'localStorage_test';\n            localStorage.setItem(testKey, 'test');\n            localStorage.removeItem(testKey);\n            return true;\n        } catch (error) {\n            return false;\n        }\n    }\n\n    /**\n     * Binds all application event listeners.\n     */\n    bindEvents() {\n        this.dom.editor.addEventListener('input', () => this.updatePreview());\n        this.dom.styleSelector.addEventListener('change', () => this.handleThemeChange());\n        this.dom.savePdfButton.addEventListener('click', () => this.handleSavePdf());\n        this.dom.saveButton.addEventListener('click', () => this.saveFile());\n        this.dom.newDocButton.addEventListener('click', () => this.createNewFile());\n        this.dom.fileList.addEventListener('click', (e) => this.handleFileListClick(e));\n        \n        // Modal events\n        this.dom.helpButton.addEventListener('click', () => this.toggleHelpModal(true));\n        this.dom.closeModalButton.addEventListener('click', () => this.toggleHelpModal(false));\n        this.dom.helpModal.addEventListener('click', (e) => {\n            if (e.target === this.dom.helpModal) {\n                this.toggleHelpModal(false);\n            }\n        });\n\n        // Sidebar and resizer events\n        this.dom.sidebarToggle.addEventListener('click', () => this.handleSidebarToggle());\n        this.dom.resizer.addEventListener('mousedown', (e) => this.initResizer(e as MouseEvent));\n    }\n\n    // --- UI Update Methods ---\n\n    updatePreview() {\n        const markdownText = (this.dom.editor as HTMLTextAreaElement).value;\n        const dirtyHtml = marked.parse(markdownText);\n        const cleanHtml = DOMPurify.sanitize(dirtyHtml);\n        this.dom.preview.innerHTML = cleanHtml;\n\n        const mermaidCodeBlocks = this.dom.preview.querySelectorAll('code.language-mermaid');\n        mermaidCodeBlocks.forEach(codeBlock => {\n            const preElement = codeBlock.parentElement;\n            if (preElement) {\n                const mermaidContainer = document.createElement('div');\n                mermaidContainer.classList.add('mermaid');\n                const decoder = document.createElement('textarea');\n                decoder.innerHTML = codeBlock.innerHTML;\n                mermaidContainer.textContent = decoder.value;\n                preElement.replaceWith(mermaidContainer);\n            }\n        });\n\n        // Apply syntax highlighting to all code blocks (except mermaid)\n        this.dom.preview.querySelectorAll('pre code:not(.language-mermaid)').forEach((block) => {\n            hljs.highlightElement(block);\n        });\n\n        try {\n            mermaid.run();\n        } catch (e) {\n            console.error('Error rendering Mermaid diagram:', e);\n        }\n    }\n    \n    renderFileList() {\n        this.dom.fileList.innerHTML = '';\n        const index = this.storageGetFileIndex();\n        if (index.length === 0) {\n            this.dom.fileList.innerHTML = '<li>No files found.</li>';\n            return;\n        }\n        index.sort((a, b) => a.name.localeCompare(b.name));\n        index.forEach(file => {\n            const li = document.createElement('li');\n            li.dataset.id = file.id;\n            li.dataset.name = file.name;\n            li.setAttribute('role', 'button');\n            li.tabIndex = 0;\n            \n            li.innerHTML = `\n                <span class=\"file-name\">${file.name}</span>\n                <button class=\"delete-btn\" data-id=\"${file.id}\" data-name=\"${file.name}\" aria-label=\"Delete ${file.name}\">&times;</button>\n            `;\n            this.dom.fileList.appendChild(li);\n        });\n    }\n\n    updateFileInfo() {\n        if (this.state.currentFile) {\n            this.dom.fileInfo.style.display = 'block';\n            this.dom.currentFileName.textContent = this.state.currentFile.name;\n        } else {\n            this.dom.fileInfo.style.display = 'none';\n        }\n    }\n\n    setSidebarState(isCollapsed: boolean) {\n        this.dom.sidebar.classList.toggle('collapsed', isCollapsed);\n        this.dom.sidebarToggle.classList.toggle('collapsed', isCollapsed);\n        this.dom.sidebarToggle.setAttribute('aria-expanded', String(!isCollapsed));\n        this.dom.sidebarToggle.innerHTML = isCollapsed ? '›' : '‹';\n        this.storageSet(SIDEBAR_STATE_KEY, String(isCollapsed));\n    }\n\n    toggleHelpModal(show: boolean) {\n        this.dom.helpModal.style.display = show ? 'flex' : 'none';\n    }\n\n    // --- Event Handlers ---\n\n    handleThemeChange() {\n        const selectedTheme = (this.dom.styleSelector as HTMLSelectElement).value;\n        this.dom.preview.className = `preview-style ${selectedTheme}`;\n        this.updatePreview();\n    }\n\n    handleSavePdf() {\n        try {\n            window.print();\n        } catch (error) {\n            console.error(\"Failed to open print dialog:\", error);\n            alert(\"Could not open the print dialog. Please check browser settings.\");\n        }\n    }\n\n    handleFileListClick(e: Event) {\n        const target = e.target as HTMLElement;\n        // Fix: Cast element to HTMLElement to allow access to dataset.\n        const deleteButton = target.closest('.delete-btn') as HTMLElement | null;\n        const listItem = target.closest('li') as HTMLElement | null;\n\n        if (deleteButton && deleteButton.dataset.id) {\n            this.deleteFile(deleteButton.dataset.id, deleteButton.dataset.name!);\n        } else if (listItem && listItem.dataset.id) {\n            this.loadFile(listItem.dataset.id);\n        }\n    }\n    \n    handleSidebarToggle() {\n        const isCollapsed = this.dom.sidebar.classList.contains('collapsed');\n        this.setSidebarState(!isCollapsed);\n    }\n    \n    // --- Core Logic Methods ---\n\n    createNewFile() {\n        this.state.currentFile = null;\n        (this.dom.editor as HTMLTextAreaElement).value = \"# New Document\\n\\nStart writing!\";\n        this.updatePreview();\n        this.updateFileInfo();\n    }\n\n    loadFile(id: string) {\n        const index = this.storageGetFileIndex();\n        const fileMeta = index.find(f => f.id === id);\n        if (!fileMeta) {\n            alert(\"File not found!\");\n            return;\n        }\n        const content = this.storageGet(`${FILE_CONTENT_PREFIX}${id}`);\n        if (content !== null) {\n            (this.dom.editor as HTMLTextAreaElement).value = content;\n            this.state.currentFile = fileMeta;\n            this.updatePreview();\n            this.updateFileInfo();\n        } else {\n            alert(\"Could not load file content.\");\n        }\n    }\n\n    saveFile() {\n        const content = (this.dom.editor as HTMLTextAreaElement).value;\n        let index = this.storageGetFileIndex();\n\n        if (this.state.currentFile) {\n            // Scenario: Saving an already opened/saved file\n            this.storageSet(`${FILE_CONTENT_PREFIX}${this.state.currentFile.id}`, content);\n            alert(`File \"${this.state.currentFile.name}\" updated.`);\n        } else {\n            // Scenario: Saving a new file (\"Save As\")\n            const promptedName = prompt(\"Enter filename (e.g., my-document.md):\", \"untitled.md\");\n            if (!promptedName || !promptedName.trim()) return; // User cancelled\n\n            const fileName = promptedName.trim();\n            const existingFile = index.find(f => f.name.toLowerCase() === fileName.toLowerCase());\n\n            if (existingFile) {\n                // Sub-scenario: Overwriting an existing file\n                if (!confirm(`A file named \"${fileName}\" already exists. Do you want to overwrite it?`)) return;\n                \n                this.storageSet(`${FILE_CONTENT_PREFIX}${existingFile.id}`, content);\n                this.state.currentFile = existingFile;\n                alert(`File \"${existingFile.name}\" overwritten.`);\n            } else {\n                // Sub-scenario: Saving a completely new file\n                const newFile = { id: Date.now().toString(), name: fileName };\n                index.push(newFile);\n                this.storageSet(`${FILE_CONTENT_PREFIX}${newFile.id}`, content);\n                this.storageSetFileIndex(index);\n                this.state.currentFile = newFile;\n                alert(`File \"${newFile.name}\" saved.`);\n            }\n            this.renderFileList();\n            this.updateFileInfo();\n        }\n    }\n    \n    deleteFile(id: string, name: string) {\n        if (!confirm(`Are you sure you want to delete \"${name}\"? This cannot be undone.`)) return;\n\n        let index = this.storageGetFileIndex();\n        index = index.filter(f => f.id !== id);\n\n        try {\n            localStorage.removeItem(`${FILE_CONTENT_PREFIX}${id}`);\n        } catch (error) {\n            console.error('Error removing file from localStorage:', error);\n        }\n\n        this.storageSetFileIndex(index);\n\n        if (this.state.currentFile && this.state.currentFile.id === id) {\n           this.createNewFile();\n        }\n        this.renderFileList();\n    }\n\n    /**\n     * Convert various document URLs to their raw/downloadable format\n     */\n    private convertToRawUrl(url: string): string {\n        // Convert Google Docs URL to plain text export\n        const googleDocsPattern = /docs\\.google\\.com\\/document\\/d\\/([a-zA-Z0-9-_]+)/;\n        const googleDocsMatch = url.match(googleDocsPattern);\n        if (googleDocsMatch) {\n            const docId = googleDocsMatch[1];\n            return `https://docs.google.com/document/d/${docId}/export?format=txt`;\n        }\n\n        // Convert GitHub blob URL to raw URL\n        // https://github.com/user/repo/blob/branch/path/file.md\n        // → https://raw.githubusercontent.com/user/repo/branch/path/file.md\n        const githubBlobPattern = /github\\.com\\/([^\\/]+)\\/([^\\/]+)\\/blob\\/(.+)/;\n        const githubBlobMatch = url.match(githubBlobPattern);\n        if (githubBlobMatch) {\n            const [, user, repo, pathWithBranch] = githubBlobMatch;\n            return `https://raw.githubusercontent.com/${user}/${repo}/${pathWithBranch}`;\n        }\n\n        return url;\n    }\n\n    /**\n     * Load markdown content from an external URL\n     */\n    async loadExternalMarkdown(url: string) {\n        try {\n            // Convert URL to raw/downloadable format if needed\n            const fetchUrl = this.convertToRawUrl(url);\n\n            const response = await fetch(fetchUrl);\n\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n\n            const contentType = response.headers.get('content-type') || '';\n            let markdownText = await response.text();\n\n            // If it's plain text from Google Docs, show a note\n            const isGoogleDocs = url.includes('docs.google.com');\n            if (isGoogleDocs && !contentType.includes('markdown')) {\n                markdownText = `> **Note:** Loaded from Google Docs as plain text. Formatting may not be preserved.\\n\\n` + markdownText;\n            }\n\n            (this.dom.editor as HTMLTextAreaElement).value = markdownText;\n\n            // Set a temporary file name based on the URL\n            const urlParts = url.split('/');\n            const fileName = urlParts[urlParts.length - 1] || 'external-document.md';\n            this.state.currentFile = { id: 'external', name: fileName };\n            this.updateFileInfo();\n\n        } catch (error) {\n            console.error('Error loading external markdown:', error);\n\n            // Show error popup\n            const errorMsg = error instanceof Error ? error.message : 'Unknown error';\n            alert(`❌ Failed to load document\\n\\nURL: ${url}\\n\\nError: ${errorMsg}\\n\\nPlease check:\\n• The URL is correct and accessible\\n• The document is publicly available\\n• CORS headers are configured on the server`);\n\n            const errorMessage = `# Error Loading External Document\n\nCould not load the document from the provided URL.\n\n**URL:** ${url}\n\n**Error:** ${errorMsg}\n\n## Troubleshooting\n\n### For GitHub files:\nYou can use either format:\n\\`\\`\\`\n# Regular GitHub URL (auto-converted)\nhttps://github.com/user/repo/blob/main/file.md\n\n# Or raw URL directly\nhttps://raw.githubusercontent.com/user/repo/main/file.md\n\\`\\`\\`\n\n### For Google Docs:\n1. File → Share → Change to \"Anyone with the link\"\n2. Use the document URL directly:\n\\`\\`\\`\nhttps://docs.google.com/document/d/YOUR_DOC_ID/edit\n\\`\\`\\`\n\n### For other sources:\n- Ensure the document is publicly accessible\n- Check that CORS is enabled on the server\n- Verify the URL is correct\n\nYou can still use this editor normally.`;\n\n            (this.dom.editor as HTMLTextAreaElement).value = errorMessage;\n        }\n    }\n    \n    initResizer(e: MouseEvent) {\n        e.preventDefault();\n        document.body.style.userSelect = 'none';\n        document.body.style.cursor = 'col-resize';\n\n        const handleMouseMove = (moveEvent: MouseEvent) => {\n            const sidebarWidth = this.dom.sidebar.classList.contains('collapsed') ? 0 : this.dom.sidebar.offsetWidth;\n            const toggleWidth = this.dom.sidebarToggle.offsetWidth;\n            const containerRect = this.dom.mainContent.getBoundingClientRect();\n            const newEditorWidth = moveEvent.clientX - containerRect.left - sidebarWidth - toggleWidth;\n            const minWidth = 150;\n            const containerWidth = containerRect.width;\n\n            if (newEditorWidth > minWidth && (containerWidth - newEditorWidth - this.dom.resizer.offsetWidth) > minWidth) {\n                this.dom.editorSection.style.flexGrow = '0';\n                this.dom.editorSection.style.flexBasis = `${newEditorWidth}px`;\n            }\n        };\n\n        const handleMouseUp = () => {\n            document.removeEventListener('mousemove', handleMouseMove);\n            document.removeEventListener('mouseup', handleMouseUp);\n            document.body.style.userSelect = '';\n            document.body.style.cursor = '';\n        };\n\n        document.addEventListener('mousemove', handleMouseMove);\n        document.addEventListener('mouseup', handleMouseUp);\n    }\n\n    // --- Local Storage Helpers ---\n\n    private storageGet(key: string): string | null {\n        try {\n            return localStorage.getItem(key);\n        } catch (error) {\n            console.error('Error reading from localStorage:', error);\n            return null;\n        }\n    }\n\n    private storageSet(key: string, value: string) {\n        try {\n            localStorage.setItem(key, value);\n        } catch (error) {\n            console.error('Error writing to localStorage:', error);\n            alert('저장 실패: 브라우저 저장소에 접근할 수 없습니다. 개인정보 보호 모드이거나 저장소가 가득 찬 것일 수 있습니다.');\n        }\n    }\n    \n    private storageGetFileIndex(): Array<{id: string, name: string}> {\n        const indexJson = this.storageGet(FILE_INDEX_KEY);\n        if (!indexJson) return [];\n        \n        try {\n            const parsed = JSON.parse(indexJson);\n            return Array.isArray(parsed) ? parsed : [];\n        } catch (error) {\n            console.error('Error parsing file index from localStorage:', error);\n            this.storageSet(FILE_INDEX_KEY, JSON.stringify([]));\n            return [];\n        }\n    }\n    \n    private storageSetFileIndex(index: Array<{id: string, name: string}>) {\n        try {\n            this.storageSet(FILE_INDEX_KEY, JSON.stringify(index));\n        } catch (error) {\n            console.error('Error saving file index to localStorage:', error);\n            alert('파일 목록 저장에 실패했습니다.');\n        }\n    }\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    new MarkdownEditorApp();\n});\n","\n        import mermaid from 'https://cdn.jsdelivr.net/npm/mermaid@10/dist/mermaid.esm.min.mjs';\n        window.mermaid = mermaid;\n    "],"names":["FILE_INDEX_KEY","FILE_CONTENT_PREFIX","SIDEBAR_STATE_KEY","INITIAL_MARKDOWN","MarkdownEditorApp","savedSidebarState","externalUrl","testKey","markdownText","dirtyHtml","cleanHtml","codeBlock","preElement","mermaidContainer","decoder","block","e","index","a","b","file","li","isCollapsed","show","selectedTheme","error","target","deleteButton","listItem","id","fileMeta","f","content","promptedName","fileName","existingFile","newFile","name","url","googleDocsPattern","googleDocsMatch","githubBlobPattern","githubBlobMatch","user","repo","pathWithBranch","fetchUrl","response","contentType","urlParts","errorMsg","errorMessage","handleMouseMove","moveEvent","sidebarWidth","toggleWidth","containerRect","newEditorWidth","minWidth","containerWidth","handleMouseUp","key","value","indexJson","parsed","mermaid"],"mappings":"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"}