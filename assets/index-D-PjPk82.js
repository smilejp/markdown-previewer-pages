import g from"https://cdn.jsdelivr.net/npm/mermaid@10/dist/mermaid.esm.min.mjs";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))r(i);new MutationObserver(i=>{for(const o of i)if(o.type==="childList")for(const n of o.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&r(n)}).observe(document,{childList:!0,subtree:!0});function t(i){const o={};return i.integrity&&(o.integrity=i.integrity),i.referrerPolicy&&(o.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?o.credentials="include":i.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function r(i){if(i.ep)return;i.ep=!0;const o=t(i);fetch(i.href,o)}})();/**
 * @license
 * SPDX-License-Identifier: Apache-2.0
 */const l="markdown_files_index",d="markdown_file_",m="sidebar_collapsed_state",f=`# Markdown Previewer with Local Storage

This is a real-time markdown editor. Your files are saved directly in your browser.

## Features

- **Live Preview:** Your markdown is rendered as you type.
- **Mermaid Support:** Create diagrams easily.
- **PDF Export:** Save your work as a PDF.
- **Themeable:** Switch between light and dark themes.
- **Local Storage:** Your files are saved in your browser, no login required!

### Example Diagram
Correct rendering of HTML tags like <br/> is now supported:
\`\`\`mermaid
graph TB
    subgraph "UI Layer"
        Pages["Pages/Components<br/>(React)"]
    end
    
    subgraph "Presenter Layer"
        Controller["Controllers<br/>(UI Event Handling)"]
        Transfer["Transfer<br/>(Entity → ViewModel)"]
        ViewModel["ViewModels<br/>(UI State)"]
    end
    
    Pages --> Controller
    Controller --> Transfer
    Transfer --> ViewModel
    Pages --> ViewModel
\`\`\`
`;class p{constructor(){this.state={currentFile:null},this.dom={editor:document.getElementById("editor"),preview:document.getElementById("preview"),styleSelector:document.getElementById("style-selector"),savePdfButton:document.getElementById("save-pdf"),saveButton:document.getElementById("save-button"),newDocButton:document.getElementById("new-doc-button"),fileList:document.getElementById("file-list"),helpButton:document.getElementById("help-button"),helpModal:document.getElementById("help-modal"),closeModalButton:document.getElementById("close-modal-button"),sidebar:document.getElementById("file-sidebar"),sidebarToggle:document.getElementById("sidebar-toggle"),resizer:document.getElementById("resizer"),editorSection:document.getElementById("editor-section"),mainContent:document.getElementById("main-content"),fileInfo:document.getElementById("file-info"),currentFileName:document.getElementById("current-file-name")},this.init()}init(){this.checkLocalStorageSupport()||alert("경고: 이 브라우저는 로컬 저장소를 지원하지 않습니다. 파일 저장 기능이 제한될 수 있습니다."),mermaid.initialize({startOnLoad:!1,theme:"default"}),this.bindEvents();const e=this.storageGet(m)==="true";this.setSidebarState(e),this.dom.editor.value=f,this.updatePreview(),this.renderFileList()}checkLocalStorageSupport(){try{const e="localStorage_test";return localStorage.setItem(e,"test"),localStorage.removeItem(e),!0}catch{return!1}}bindEvents(){this.dom.editor.addEventListener("input",()=>this.updatePreview()),this.dom.styleSelector.addEventListener("change",()=>this.handleThemeChange()),this.dom.savePdfButton.addEventListener("click",()=>this.handleSavePdf()),this.dom.saveButton.addEventListener("click",()=>this.saveFile()),this.dom.newDocButton.addEventListener("click",()=>this.createNewFile()),this.dom.fileList.addEventListener("click",e=>this.handleFileListClick(e)),this.dom.helpButton.addEventListener("click",()=>this.toggleHelpModal(!0)),this.dom.closeModalButton.addEventListener("click",()=>this.toggleHelpModal(!1)),this.dom.helpModal.addEventListener("click",e=>{e.target===this.dom.helpModal&&this.toggleHelpModal(!1)}),this.dom.sidebarToggle.addEventListener("click",()=>this.handleSidebarToggle()),this.dom.resizer.addEventListener("mousedown",e=>this.initResizer(e))}updatePreview(){const e=this.dom.editor.value,t=marked.parse(e),r=DOMPurify.sanitize(t);this.dom.preview.innerHTML=r,this.dom.preview.querySelectorAll("code.language-mermaid").forEach(o=>{const n=o.parentElement;if(n){const s=document.createElement("div");s.classList.add("mermaid");const a=document.createElement("textarea");a.innerHTML=o.innerHTML,s.textContent=a.value,n.replaceWith(s)}}),this.dom.preview.querySelectorAll("pre code:not(.language-mermaid)").forEach(o=>{hljs.highlightElement(o)});try{mermaid.run()}catch(o){console.error("Error rendering Mermaid diagram:",o)}}renderFileList(){this.dom.fileList.innerHTML="";const e=this.storageGetFileIndex();if(e.length===0){this.dom.fileList.innerHTML="<li>No files found.</li>";return}e.sort((t,r)=>t.name.localeCompare(r.name)),e.forEach(t=>{const r=document.createElement("li");r.dataset.id=t.id,r.dataset.name=t.name,r.setAttribute("role","button"),r.tabIndex=0,r.innerHTML=`
                <span class="file-name">${t.name}</span>
                <button class="delete-btn" data-id="${t.id}" data-name="${t.name}" aria-label="Delete ${t.name}">&times;</button>
            `,this.dom.fileList.appendChild(r)})}updateFileInfo(){this.state.currentFile?(this.dom.fileInfo.style.display="block",this.dom.currentFileName.textContent=this.state.currentFile.name):this.dom.fileInfo.style.display="none"}setSidebarState(e){this.dom.sidebar.classList.toggle("collapsed",e),this.dom.sidebarToggle.classList.toggle("collapsed",e),this.dom.sidebarToggle.setAttribute("aria-expanded",String(!e)),this.dom.sidebarToggle.innerHTML=e?"›":"‹",this.storageSet(m,String(e))}toggleHelpModal(e){this.dom.helpModal.style.display=e?"flex":"none"}handleThemeChange(){const e=this.dom.styleSelector.value;this.dom.preview.className=`preview-style ${e}`,this.updatePreview()}handleSavePdf(){try{window.print()}catch(e){console.error("Failed to open print dialog:",e),alert("Could not open the print dialog. Please check browser settings.")}}handleFileListClick(e){const t=e.target,r=t.closest(".delete-btn"),i=t.closest("li");r&&r.dataset.id?this.deleteFile(r.dataset.id,r.dataset.name):i&&i.dataset.id&&this.loadFile(i.dataset.id)}handleSidebarToggle(){const e=this.dom.sidebar.classList.contains("collapsed");this.setSidebarState(!e)}createNewFile(){this.state.currentFile=null,this.dom.editor.value=`# New Document

Start writing!`,this.updatePreview(),this.updateFileInfo()}loadFile(e){const r=this.storageGetFileIndex().find(o=>o.id===e);if(!r){alert("File not found!");return}const i=this.storageGet(`${d}${e}`);i!==null?(this.dom.editor.value=i,this.state.currentFile=r,this.updatePreview(),this.updateFileInfo()):alert("Could not load file content.")}saveFile(){const e=this.dom.editor.value;let t=this.storageGetFileIndex();if(this.state.currentFile)this.storageSet(`${d}${this.state.currentFile.id}`,e),alert(`File "${this.state.currentFile.name}" updated.`);else{const r=prompt("Enter filename (e.g., my-document.md):","untitled.md");if(!r||!r.trim())return;const i=r.trim(),o=t.find(n=>n.name.toLowerCase()===i.toLowerCase());if(o){if(!confirm(`A file named "${i}" already exists. Do you want to overwrite it?`))return;this.storageSet(`${d}${o.id}`,e),this.state.currentFile=o,alert(`File "${o.name}" overwritten.`)}else{const n={id:Date.now().toString(),name:i};t.push(n),this.storageSet(`${d}${n.id}`,e),this.storageSetFileIndex(t),this.state.currentFile=n,alert(`File "${n.name}" saved.`)}this.renderFileList(),this.updateFileInfo()}}deleteFile(e,t){if(!confirm(`Are you sure you want to delete "${t}"? This cannot be undone.`))return;let r=this.storageGetFileIndex();r=r.filter(i=>i.id!==e);try{localStorage.removeItem(`${d}${e}`)}catch(i){console.error("Error removing file from localStorage:",i)}this.storageSetFileIndex(r),this.state.currentFile&&this.state.currentFile.id===e&&this.createNewFile(),this.renderFileList()}initResizer(e){e.preventDefault(),document.body.style.userSelect="none",document.body.style.cursor="col-resize";const t=i=>{const o=this.dom.sidebar.classList.contains("collapsed")?0:this.dom.sidebar.offsetWidth,n=this.dom.sidebarToggle.offsetWidth,s=this.dom.mainContent.getBoundingClientRect(),a=i.clientX-s.left-o-n,c=150,h=s.width;a>c&&h-a-this.dom.resizer.offsetWidth>c&&(this.dom.editorSection.style.flexGrow="0",this.dom.editorSection.style.flexBasis=`${a}px`)},r=()=>{document.removeEventListener("mousemove",t),document.removeEventListener("mouseup",r),document.body.style.userSelect="",document.body.style.cursor=""};document.addEventListener("mousemove",t),document.addEventListener("mouseup",r)}storageGet(e){try{return localStorage.getItem(e)}catch(t){return console.error("Error reading from localStorage:",t),null}}storageSet(e,t){try{localStorage.setItem(e,t)}catch(r){console.error("Error writing to localStorage:",r),alert("저장 실패: 브라우저 저장소에 접근할 수 없습니다. 개인정보 보호 모드이거나 저장소가 가득 찬 것일 수 있습니다.")}}storageGetFileIndex(){const e=this.storageGet(l);if(!e)return[];try{const t=JSON.parse(e);return Array.isArray(t)?t:[]}catch(t){return console.error("Error parsing file index from localStorage:",t),this.storageSet(l,JSON.stringify([])),[]}}storageSetFileIndex(e){try{this.storageSet(l,JSON.stringify(e))}catch(t){console.error("Error saving file index to localStorage:",t),alert("파일 목록 저장에 실패했습니다.")}}}document.addEventListener("DOMContentLoaded",()=>{new p});window.mermaid=g;
//# sourceMappingURL=index-D-PjPk82.js.map
